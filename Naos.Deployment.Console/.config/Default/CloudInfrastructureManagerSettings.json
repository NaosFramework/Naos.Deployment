{
    "DriveLetterVolumeDescriptorMap": {
        "C": "/dev/sda1",
        "D": "xvdb",
        "E": "xvdc",
        "F": "xvdd"
    },
    "AwsInstanceTypes": [
        { "AwsType": "t1.micro", "RamInGb": 0.613, "VirtualCores": 1 },
        { "AwsType": "t2.medium", "RamInGb": 4.0, "VirtualCores": 2 },
        { "AwsType": "t2.micro", "RamInGb": 1.0, "VirtualCores": 1 },
        { "AwsType": "t2.small", "RamInGb": 2.0, "VirtualCores": 1 },
        { "AwsType": "m1.small", "RamInGb": 1.7, "VirtualCores": 1 },
        { "AwsType": "m1.medium", "RamInGb": 3.75, "VirtualCores": 1 },
        { "AwsType": "m1.large", "RamInGb": 7.5, "VirtualCores": 2 },
        { "AwsType": "m1.xlarge", "RamInGb": 15.0, "VirtualCores": 4 },
        { "AwsType": "m2.xlarge", "RamInGb": 17.1, "VirtualCores": 2 },
        { "AwsType": "m2.2xlarge", "RamInGb": 34.2, "VirtualCores": 4 },
        { "AwsType": "m2.4xlarge", "RamInGb": 68.4, "VirtualCores": 8 },
        { "AwsType": "m3.large", "RamInGb": 7.5, "VirtualCores": 2 },
        { "AwsType": "m3.medium", "RamInGb": 3.75, "VirtualCores": 1 },
        { "AwsType": "m3.xlarge", "RamInGb": 15.0, "VirtualCores": 4 },
        { "AwsType": "m3.2xlarge", "RamInGb": 30.0, "VirtualCores": 8 },
        { "AwsType": "c1.medium", "RamInGb": 1.7, "VirtualCores": 2 },
        { "AwsType": "c1.xlarge", "RamInGb": 7.0, "VirtualCores": 8 },
        { "AwsType": "c3.large", "RamInGb": 3.75, "VirtualCores": 2 },
        { "AwsType": "c3.xlarge", "RamInGb": 7.5, "VirtualCores": 4 },
        { "AwsType": "c3.2xlarge", "RamInGb": 15.0, "VirtualCores": 8 },
        { "AwsType": "c3.4xlarge", "RamInGb": 30.0, "VirtualCores": 16 },
        { "AwsType": "c3.8xlarge", "RamInGb": 60.0, "VirtualCores": 32 },
        { "AwsType": "c4.large", "RamInGb": 3.75, "VirtualCores": 2 },
        { "AwsType": "c4.xlarge", "RamInGb": 7.5, "VirtualCores": 4 },
        { "AwsType": "c4.2xlarge", "RamInGb": 15.0, "VirtualCores": 8 },
        { "AwsType": "c4.4xlarge", "RamInGb": 30.0, "VirtualCores": 16 },
        { "AwsType": "c4.8xlarge", "RamInGb": 60.0, "VirtualCores": 36 },
        { "AwsType": "g2.2xlarge", "RamInGb": 15.0, "VirtualCores": 8 },
        { "AwsType": "r3.large", "RamInGb": 15.25, "VirtualCores": 2 },
        { "AwsType": "r3.xlarge", "RamInGb": 30.5, "VirtualCores": 4 },
        { "AwsType": "r3.2xlarge", "RamInGb": 61.0, "VirtualCores": 8 },
        { "AwsType": "r3.4xlarge", "RamInGb": 122.0, "VirtualCores": 16 },
        { "AwsType": "r3.8xlarge", "RamInGb": 244.0, "VirtualCores": 32 },
        { "AwsType": "i2.xlarge", "RamInGb": 30.5, "VirtualCores": 4 },
        { "AwsType": "i2.2xlarge", "RamInGb": 61.0, "VirtualCores": 8 },
        { "AwsType": "i2.4xlarge", "RamInGb": 122.0, "VirtualCores": 16 },
        { "AwsType": "i2.8xlarge", "RamInGb": 244.0, "VirtualCores": 32 },
        { "AwsType": "d2.xlarge", "RamInGb": 30.5, "VirtualCores": 4 },
        { "AwsType": "d2.2xlarge", "RamInGb": 61.0, "VirtualCores": 8 },
        { "AwsType": "d2.4xlarge", "RamInGb": 122.0, "VirtualCores": 16 },
        { "AwsType": "d2.8xlarge", "RamInGb": 244.0, "VirtualCores": 36 }
    ],
    "InstanceCreationUserDataLines": [
        "<powershell>",
        "# BLOCK NAME: powershellBlock-enableRemoting",
        "winrm quickconfig -q",
        "winrm set winrm/config/winrs '@{MaxMemoryPerShellMB=\"300\",\"\"}'",
        "winrm set winrm/config '@{MaxTimeoutms=\1800000\"}'",
        "netsh advfirewall firewall add rule name=\"WinRM 5985\" protocol=TCP dir=in localport=5985 action=allow",
        "netsh advfirewall firewall add rule name=\"WinRM 5986\" protocol=TCP dir=in localport=5986 action=allow",
        "net stop winrm",
        "sc.exe config winrm start=auto",
        "net start winrm",
        "# BLOCK NAME: powershellBlock-enableScriptExecution",
        "Set-ExecutionPolicy 'Unrestricted' -Force",
        "# ADDING COMMANDS TO CONFIGURE WINDOWS UPDATE TO RUN EVERYDAY AT 3AM AND INSTALL IMPORTANT UPDATES AUTOMATICALLY",
        "$windowsUpdateSettings = (New-Object -com 'Microsoft.Update.AutoUpdate').Settings",
        "$windowsUpdateSettings.NotificationLevel = 4",
        "$windowsUpdateSettings.Save()",
        "# ADDING COMMANDS TO CONFIGURE TIME TO UPDATE AUTOMATICALLY (on by default but must restart the service)",
        "NET STOP W32Time",
        "NET START W32Time",
        "# ADDING COMMAND TO INSTALL CHOCOLATEY FOR APPLICATION INSTALLS LATER",
        "iex ((new-object net.webclient).DownloadString('https://chocolatey.org/install.ps1'))",
        "# ADDING RENAME COMMAND BECAUSE 'computerName' WAS PRESENT IN CONFIG",
        "Rename-Computer -NewName {ComputerName} -Force",
        "</powershell>"
    ]
}
